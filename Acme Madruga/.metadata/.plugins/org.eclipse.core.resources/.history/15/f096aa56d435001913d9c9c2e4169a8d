
package repositories;

import java.util.Collection;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import domain.Brotherhood;

@Repository
public interface BrotherhoodRepository extends JpaRepository<domain.Brotherhood, Integer> {

	// RF 11.3 (a)
	@Query("select e.brotherhood from Enrolment e where e.member.id = ?1")
	Collection<Brotherhood> findBrotherhoodByMemberBelong(int id);

	// RF 11.3 (b)
	@Query("select d.brotherhood from DropOut d where d.member.id = ?1")
	Collection<Brotherhood> findBrotherhoodByMemberHasBelonged(int id);

	// RF 12.3.1
	@Query("select avg(1.0*(select count(r.member) from Enrolment e where e.brotherhood.id=br.id))," + "min(1.0*(select count(r.member) from Enrolment e where e.brotherhood.id=br.id)), "
		+ "max(1.0*(select count(r.member) from Enrolment e where e.brotherhood.id=br.id))," + "stddev(1.0*(select count(r.member) " + "from Enrolment e where e.brotherhood.id=br.id)) from Brothethood br")
	Collection<Double> applicationsPerFixUpTasks();
}
